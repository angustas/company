{
  "_args": [
    [
      {
        "raw": "enquire",
        "scope": null,
        "escapedName": "enquire",
        "name": "enquire",
        "rawSpec": "",
        "spec": "latest",
        "type": "tag"
      },
      "/Applications/XAMPP/xamppfiles/htdocs/company"
    ]
  ],
  "_from": "enquire@latest",
  "_id": "enquire@0.0.2",
  "_inCache": true,
  "_location": "/enquire",
  "_phantomChildren": {},
  "_requested": {
    "raw": "enquire",
    "scope": null,
    "escapedName": "enquire",
    "name": "enquire",
    "rawSpec": "",
    "spec": "latest",
    "type": "tag"
  },
  "_requiredBy": [
    "#USER",
    "/"
  ],
  "_resolved": "https://registry.npmjs.org/enquire/-/enquire-0.0.2.tgz",
  "_shasum": "e92389cd80224971700e4fc8bac8129c75bf8661",
  "_shrinkwrap": null,
  "_spec": "enquire",
  "_where": "/Applications/XAMPP/xamppfiles/htdocs/company",
  "author": {
    "name": "Andrew Keig",
    "email": "andrew.keig@gmail.com"
  },
  "bugs": {
    "url": "https://github.com/AndrewKeig/enquire/issues"
  },
  "dependencies": {},
  "description": "provides a simple convention based solution to overriding dependencies in node.js",
  "devDependencies": {
    "mocha": "*",
    "nstore": "*"
  },
  "directories": {
    "example": "examples",
    "test": "test"
  },
  "dist": {
    "shasum": "e92389cd80224971700e4fc8bac8129c75bf8661",
    "tarball": "https://registry.npmjs.org/enquire/-/enquire-0.0.2.tgz"
  },
  "engines": [
    "node >= 0.4.0"
  ],
  "homepage": "https://github.com/AndrewKeig/enquire#readme",
  "main": "./index",
  "maintainers": [
    {
      "name": "airasoul",
      "email": "andrew.keig@gmail.com"
    }
  ],
  "name": "enquire",
  "optionalDependencies": {},
  "readme": "# enquire.js\r\n\r\n   provides a simple convention based solution to overriding dependencies in node.js.\r\n\r\n   enquire is a simple wrapper around the require module; which allows you to require alternative;\r\n   environment specific implementations of a module.\r\n\r\n   using nodes core process.env.NODE_ENV environment variable we can setup alternative implementations for\r\n   unit/integration testing; development, uat and production environments etc..\r\n\r\n\r\n## Installation\r\n\r\n    $ npm install enquire\r\n\r\n\r\n## Features\r\n\r\n   using enquire to import dependencies allows you to do some interesting things:\r\n\r\n  - provide alternative implementations to your modules when in different environments\r\n   - stub io bound modules in a unit testing environment\r\n   - run integration tests against alternative implementations; for example an in-memory data stores\r\n   - simplify development and debugging by providing stubbed out io bound modules\r\n  - re-use tests by running the same test as a unit or integration test by simply setting process.env.NODE_ENV to\r\n    for example 'unit' or 'integration'\r\n\r\n\r\n\r\n## API\r\n\r\n   - load an environment specific implementation of a module based on the current state of process.env.NODE_ENV\r\n\r\n\t\tvar some-module = enquire.load('/some-module');\r\n\r\n   - register an environment/path pair; this override allows you to store alternative implementations in\r\n     different locations.\r\n\r\n\t\tenquire.register('uat', 'path-to-uat-modules');  \r\n\r\n     by default enquire supports a convention whereby alternative implementations are located under the folder\r\n     of the default implementation. For example:\r\n\r\n\t\t/some-module/\r\n\t\t/some-module-unit/\r\n\t\t/some-module-integration/\r\n        /some-module-uat/\r\n\r\n\r\n## Examples for registering environment/paths\r\n\r\n## Example 1;\r\n\r\ngiven I do not register any environment/path and I have an alternative implementation\r\nto a module with the following folder structure\r\n\r\n\t    /path/some-module/\r\n\t\t/path/some-module-unit-testing/\r\n\r\nwhen i request a module in a unit testing environment\r\n\r\n\t\tprocess.env.NODE_ENV = 'unit-testing';\r\n\t\t\r\n\t\tvar module = enquire.load(\"some-module\");\r\n\r\nthen the module requested should be located in this location\r\n\r\n\t\t/path/some-module-unit-testing/\r\n\r\n\r\n## Example 2;\r\n\t\t\t\r\ngiven I register the following environment/path\r\n\r\n    \tenquire.register('unit-testing', '/path/');\r\n\r\nwhen i request a module in a unit testing environment\r\n\r\n\t\tprocess.env.NODE_ENV = 'unit-testing';\r\n\t\t\r\n\t\tvar module = enquire.load(\"some-module\");\r\n\r\nthen the module requested should be located in this location\r\n\r\n\t\t/path/some-module-unit-testing/\r\n\t\t\r\n\t\t\r\n\r\n## Examples for loading modules\r\n\r\n## Example 1;\r\n\r\ngiven process.env.NODE_ENV is in its default state\r\n\r\nwhen we request the module with enquire\r\n \r\n    var module = enquire.load('some-module');\r\n\r\nthen return some_module\r\n   \r\n\r\n## Example 2\r\n\r\ngiven process.env.NODE_ENV is set to 'uat'\r\n\r\n\tprocess.env.NODE_ENV = 'uat'\r\n\r\nwhen we request some_module\r\n\r\n     var module = enquire.load('some_module');\r\n\r\nthen return some_module-uat\r\n\r\n\r\n## Example 3\r\n\r\ngiven process.env.NODE_ENV is in its default state \r\n\r\nwhen we request some_module overriding environment parameter as \"uat\"\r\n\r\n     var module = enquire.load('../test/doubles', \"uat\");\r\n\r\nthen return some-module-uat\r\n\r\n",
  "repository": {
    "type": "git",
    "url": "git+https://github.com/AndrewKeig/enquire.git"
  },
  "tags": [
    "configuration",
    "testing",
    "modules",
    "dependencies"
  ],
  "version": "0.0.2"
}
