'use strict';

Object.defineProperty(exports, "__esModule", {
  value: true
});

var _extends2 = require('babel-runtime/helpers/extends');

var _extends3 = _interopRequireDefault(_extends2);

var _objectWithoutProperties2 = require('babel-runtime/helpers/objectWithoutProperties');

var _objectWithoutProperties3 = _interopRequireDefault(_objectWithoutProperties2);

var _classCallCheck2 = require('babel-runtime/helpers/classCallCheck');

var _classCallCheck3 = _interopRequireDefault(_classCallCheck2);

var _possibleConstructorReturn2 = require('babel-runtime/helpers/possibleConstructorReturn');

var _possibleConstructorReturn3 = _interopRequireDefault(_possibleConstructorReturn2);

var _inherits2 = require('babel-runtime/helpers/inherits');

var _inherits3 = _interopRequireDefault(_inherits2);

var _react = require('react');

var _react2 = _interopRequireDefault(_react);

var _reactDom = require('react-dom');

var _reactDom2 = _interopRequireDefault(_reactDom);

var _Mapped = require('./Mapped');

var _Mapped2 = _interopRequireDefault(_Mapped);

var _EventDispatcher = require('./EventDispatcher');

var _EventDispatcher2 = _interopRequireDefault(_EventDispatcher);

var _util = require('./util');

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { "default": obj }; }

var noop = function noop() {};

var ScrollElement = function (_React$Component) {
  (0, _inherits3["default"])(ScrollElement, _React$Component);

  function ScrollElement() {
    var _temp, _this, _ret;

    (0, _classCallCheck3["default"])(this, ScrollElement);

    for (var _len = arguments.length, args = Array(_len), _key = 0; _key < _len; _key++) {
      args[_key] = arguments[_key];
    }

    return _ret = (_temp = (_this = (0, _possibleConstructorReturn3["default"])(this, _React$Component.call.apply(_React$Component, [this].concat(args))), _this), _this.getParam = function (e) {
      _this.clientHeight = _this.target ? _this.target.clientHeight : (0, _util.windowHeight)();
      var scrollTop = _this.target ? _this.target.scrollTop : (0, _util.currentScrollTop)();
      var domRect = _this.dom.getBoundingClientRect();
      var targetTop = _this.target ? _this.target.getBoundingClientRect().top : 0;
      var offsetTop = domRect.top + scrollTop - targetTop;
      _this.elementShowHeight = scrollTop - offsetTop + _this.clientHeight;
      var playScale = (0, _util.transformArguments)(_this.props.playScale);
      var playScaleEnterArray = /([\+\-]?[0-9#\.]+)(px|vh|%)?/.exec(String(playScale[0]));
      if (!playScaleEnterArray[2]) {
        _this.playHeight = _this.clientHeight * parseFloat(playScale[0]);
      } else if (playScaleEnterArray[2] === 'px') {
        _this.playHeight = parseFloat(playScaleEnterArray[1]);
      } else {
        _this.playHeight = _this.clientHeight * parseFloat(playScaleEnterArray[1]) / 100;
      }
      var leaveHeight = domRect.height;
      var playScaleLeaveArray = /([\+\-]?[0-9#\.]+)(px|vh|%)?/.exec(String(playScale[1]));
      if (!playScaleLeaveArray[2]) {
        _this.leavePlayHeight = leaveHeight * parseFloat(playScale[1]);
      } else if (playScaleLeaveArray[2] === 'px') {
        _this.leavePlayHeight = parseFloat(playScaleLeaveArray[1]);
      } else {
        _this.leavePlayHeight = leaveHeight * parseFloat(playScaleLeaveArray[1]) / 100;
      }
      var enter = _this.elementShowHeight >= _this.playHeight && _this.elementShowHeight <= _this.clientHeight + _this.leavePlayHeight;
      var enterOrLeave = enter ? 'enter' : 'leave';
      var mode = _this.enter !== enter || typeof _this.enter !== 'boolean' ? enterOrLeave : null;
      if (mode) {
        _this.props.onChange({ mode: mode, id: _this.props.id }, e);
      }
      _this.enter = enter;
    }, _this.scrollEventListener = function (e) {
      _this.getParam(e);
    }, _temp), (0, _possibleConstructorReturn3["default"])(_this, _ret);
  }

  ScrollElement.prototype.componentDidMount = function componentDidMount() {
    this.dom = _reactDom2["default"].findDOMNode(this);
    if (this.props.location) {
      this.dom = document.getElementById(this.props.location);
      _Mapped2["default"].register(this.props.location, this.dom);
    } else if (this.props.id) {
      _Mapped2["default"].register(this.props.id, this.dom);
    }
    var date = Date.now();
    this.target = this.props.targetId && document.getElementById(this.props.targetId);

    var scrollTop = (0, _util.currentScrollTop)();
    if (!scrollTop) {
      this.scrollEventListener();
    }
    var length = _EventDispatcher2["default"]._listeners.scroll ? _EventDispatcher2["default"]._listeners.scroll.length : 0;
    this.eventType = 'scroll.scrollEvent' + date + length;
    _EventDispatcher2["default"].addEventListener(this.eventType, this.scrollEventListener, this.target);
  };

  ScrollElement.prototype.componentWillReceiveProps = function componentWillReceiveProps(nextProps) {
    this.setState({
      children: (0, _util.toArrayChildren)(nextProps.children)
    });
  };

  ScrollElement.prototype.componentWillUnmount = function componentWillUnmount() {
    _Mapped2["default"].unRegister(this.props.id);
    _EventDispatcher2["default"].removeEventListener(this.eventType, this.scrollEventListener, this.target);
  };

  ScrollElement.prototype.render = function render() {
    var props = (0, _objectWithoutProperties3["default"])(this.props, []);

    ['component', 'playScale', 'location', 'targetId'].forEach(function (key) {
      return delete props[key];
    });
    return _react2["default"].createElement(this.props.component, (0, _extends3["default"])({}, props));
  };

  return ScrollElement;
}(_react2["default"].Component);

ScrollElement.propTypes = {
  component: _react2["default"].PropTypes.any,
  playScale: _react2["default"].PropTypes.any,
  id: _react2["default"].PropTypes.string,
  onChange: _react2["default"].PropTypes.func,
  location: _react2["default"].PropTypes.string,
  targetId: _react2["default"].PropTypes.string
};

ScrollElement.defaultProps = {
  component: 'div',
  onChange: noop,
  playScale: 0.5
};
ScrollElement.isScrollElement = true;
exports["default"] = ScrollElement;
module.exports = exports['default'];